/* :ts=4							preferences.h
 *
 *    cp4 - Commodore C+4 emulator
 *    Copyright (C) 1998 Gáti Gergely
 *
 *    This program is free software; you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation; either version 2 of the License, or
 *    (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program; if not, write to the Free Software Foundation,
 *    Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 *    e-mail: gatig@dragon.klte.hu
 *
 *
 *  Source machine generated by GadToolsBox V2.0b
 *  which is (c) Copyright 1991-1993 Jaba Development
 *
 *  GUI Designed by : Gáti Gergely
 */

#define GetString( g )      ((( struct StringInfo * )g->SpecialInfo )->Buffer  )
#define GetNumber( g )      ((( struct StringInfo * )g->SpecialInfo )->LongInt )

#define GD_gscrmode                            0
#define GD_gscrtxt                             1

//#define GD_gsnd                              2
//#define GD_gsplim                            3
//#define GD_gtwoframe                         4
//#define GD_gswapjoy                          5
//NEW
#define GD_gdriveselcyc						2
#define GD_gdrivetypecyc					3
#define GD_gd64sel							4
//NEW
#define GD_gkeymap                             5
#define GD_gkeymaptxt                          6
#define GD_gc2ptxt                             7
#define GD_gc2pnametxt                         8
#define GD_gc2pauthortxt                       9
#define GD_gc2plist                            10
#define GD_gc2pinfo                            11
#define GD_gsave                               12
#define GD_guse                                13
#define GD_gcancel                             14
#define GD_gquit                               15

//#define cp4prefs_CNT 17
#define cp4prefs_CNT 16

extern struct IntuitionBase *IntuitionBase;
extern struct Library       *GadToolsBase;

extern struct IntuiMessage   cp4prefsMsg;
extern struct MinList        gc2plist0List;
extern struct MinList        gc2pinfo0List;

static int gscrmodeClicked( void );
//static int gsndClicked( void );
//static int gsplimClicked( void );
//static int gtwoframeClicked( void );
//static int gswapjoyClicked( void );
//NEW
static int gdriveselcycClicked( void );
static int gdrivetypecycClicked( void );
static int gd64selClicked( void );
//NEW
static int gkeymapClicked( void );
static int gc2plistClicked( void );
static int gc2pinfoClicked( void );
static int gsaveClicked( void );
static int guseClicked( void );
static int gcancelClicked( void );
static int gquitClicked( void );

static int SetupScreen( void );
static void CloseDownScreen( void );
static int Handlecp4prefsIDCMP( void );
static int cp4prefsCloseWindow( void );
static int Opencp4prefsWindow( void );
static void Closecp4prefsWindow( void );

static int cp4prefsmpload( void );
static int cp4prefsmpsave( void );
static int cp4prefsmpreset( void );
static int cp4prefsmpback( void );
static int cp4prefsmpabout( void );
static int cp4prefsmpkeymap( void );
static int cp4prefsmpquit( void );
static int cp4prefsm2sound( void );
static int cp4prefsm2splim( void );
static int cp4prefsm2twoframe( void );
static int cp4prefsm2swapjoy( void );
static int cp4prefsm2perc( void );
static int cp4prefsm2iec( void );
static int cp4prefsm2realtime( void );
static int cp4prefsm2sid( void );
static int cp4prefsm2osd( void );
       int cp4prefsmpmakesnapshot( void );		// 99oct12
       int cp4prefsmploadsnapshot( void );		// non-static, use from ted.c
static int cp4prefsmppalette( void );			// 99nov22
static int cp4prefsm2xpk( void );				// 99nov24

// MENU
#define M_PROJECT		0
#define M_PREFS			1
// _PROJECT
#define MP_LOAD			0
#define MP_SAVE			1
#define MP_RESET		3
#define MP_BACK			4
#define MP_KEYMAP		5

#define MP_MAKESNAP		7			// 99oct12
#define MP_LOADSNAP		8

#define MP_PALETTE		10			// 99nov22

#define MP_ABOUT		12
#define MP_QUIT			13
// _PREFS
#define M2_SOUND		0
#define M2_SPLIM		1
#define M2_TWOFRAME		2
#define M2_SWAPJOY		3
#define M2_PERC			4
#define M2_IEC			5
#define M2_REALTIME		6
#define M2_SID			7
#define M2_OSD			8
#define M2_XPK			9
// _PREFS/XPK
#define M2_XPK_ON		0
#define M2_XPK_FIRST	2		// 1st packer
